package presentacion;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import negocio.bo.DoctorBo;
import negocio.clases.Doctor;
import utilities.SwingUtilities;

/**
 *
 * @author Enzo Quartino Zamora
 * <github.com/enzocr || email: enzoquartino@gmail.com>
 */
@SuppressWarnings("serial")
public class MantDoctor extends javax.swing.JFrame {

    private DoctorBo bo;
    private DefaultTableModel modelDoctor;

    /**
     * Creates new form MantProfesor
     */
    public MantDoctor() {
        initComponents();
        this.bo = new DoctorBo();
        this.modelDoctor = new DefaultTableModel();
        fillTable();
    }

    private void fillTable() {

        this.modelDoctor = new DefaultTableModel() {
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int colum) {
                return false;
            }
        };
        getTableDoctor().getTableHeader().setReorderingAllowed(false);

        getModelDoctor().setColumnCount(0);

        getModelDoctor().addColumn("Cédula");
        getModelDoctor().addColumn("Nombre");
        getModelDoctor().addColumn("Apellido");
        getModelDoctor().addColumn("Especialidad");
        getModelDoctor().addColumn("Salario");
        getModelDoctor().addColumn("Dirección");
        getModelDoctor().addColumn("Teléfono");

        List<Doctor> list = getBo().getAll();

        if (list != null) {
            getModelDoctor().setNumRows(list.size());

            for (int i = 0; i < list.size(); i++) {
                Doctor d = list.get(i);
                getModelDoctor().setValueAt(d.getCedula(), i, 0);//i=fila 0=columna
                getModelDoctor().setValueAt(d.getNombre(), i, 1);
                getModelDoctor().setValueAt(d.getApellido(), i, 2);
                getModelDoctor().setValueAt(d.getEspecialidad(), i, 3);
                getModelDoctor().setValueAt(d.getSalario(), i, 4);
                getModelDoctor().setValueAt(d.getDireccion(), i, 5);
                getModelDoctor().setValueAt(d.getTelefono(), i, 6);
            }
        }

        getTableDoctor().setModel(getModelDoctor());

    }

    private void fillTable(List<Doctor> list) {
        this.modelDoctor = new DefaultTableModel() {
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int colum) {
                return false;
            }
        };
        getTableDoctor().getTableHeader().setReorderingAllowed(false);

        getModelDoctor().setColumnCount(0);
        getModelDoctor().addColumn("Cédula");
        getModelDoctor().addColumn("Nombre");
        getModelDoctor().addColumn("Apellido");
        getModelDoctor().addColumn("Especialidad");
        getModelDoctor().addColumn("Salario");
        getModelDoctor().addColumn("Dirección");
        getModelDoctor().addColumn("Teléfono");

        if (list != null) {
            getModelDoctor().setNumRows(list.size());

            for (int i = 0; i < list.size(); i++) {
                Doctor d = list.get(i);
                getModelDoctor().setValueAt(d.getCedula(), i, 0);//i=fila 0=columna
                getModelDoctor().setValueAt(d.getNombre(), i, 1);
                getModelDoctor().setValueAt(d.getApellido(), i, 2);
                getModelDoctor().setValueAt(d.getEspecialidad(), i, 3);
                getModelDoctor().setValueAt(d.getSalario(), i, 4);
                getModelDoctor().setValueAt(d.getDireccion(), i, 5);
                getModelDoctor().setValueAt(d.getTelefono(), i, 6);
            }
        }

        this.tableDoctor.setModel(getModelDoctor());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cedulaTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nombreTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        apellidoTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        cleanButton = new javax.swing.JButton();
        getByIdButton = new javax.swing.JButton();
        getByNameButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDoctor = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        salarioTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        direccionTextField = new javax.swing.JTextField();
        telefonoTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        especialidadTextField = new javax.swing.JTextField();
        insertButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 255));
        jLabel1.setText("Mantenimiento de doctores");

        jLabel2.setText("Cédula: ");

        cedulaTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cedulaTextFieldMouseClicked(evt);
            }
        });
        cedulaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre: ");

        nombreTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nombreTextFieldMouseClicked(evt);
            }
        });
        nombreTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Apellido:");

        apellidoTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                apellidoTextFieldMouseClicked(evt);
            }
        });

        jLabel5.setText("Especialidad:");

        deleteButton.setForeground(new java.awt.Color(204, 51, 0));
        deleteButton.setText("Eliminar");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Modificar");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        cleanButton.setText("Limpiar");
        cleanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanButtonActionPerformed(evt);
            }
        });

        getByIdButton.setText("Consultar por cedula");
        getByIdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getByIdButtonActionPerformed(evt);
            }
        });

        getByNameButton.setText("Consultar por nombre");
        getByNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getByNameButtonActionPerformed(evt);
            }
        });

        tableDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableDoctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDoctorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableDoctor);

        jLabel6.setText("Salario:");

        salarioTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salarioTextFieldMouseClicked(evt);
            }
        });
        salarioTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salarioTextFieldActionPerformed(evt);
            }
        });

        jLabel7.setText("Dirección:");

        direccionTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                direccionTextFieldMouseClicked(evt);
            }
        });
        direccionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                direccionTextFieldActionPerformed(evt);
            }
        });

        telefonoTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                telefonoTextFieldMouseClicked(evt);
            }
        });

        jLabel8.setText("Teléfono:");

        especialidadTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                especialidadTextFieldMouseClicked(evt);
            }
        });
        especialidadTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                especialidadTextFieldActionPerformed(evt);
            }
        });

        insertButton.setText("Agregar");
        insertButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insertButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(getByNameButton)
                                    .addComponent(insertButton))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 339, Short.MAX_VALUE)
                                        .addComponent(getByIdButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(updateButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cleanButton)
                                        .addGap(107, 107, 107)
                                        .addComponent(deleteButton))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jLabel2))
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cedulaTextField)
                                    .addComponent(nombreTextField)
                                    .addComponent(salarioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel7))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addComponent(apellidoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(direccionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(especialidadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(21, 21, 21))
                            .addComponent(jScrollPane2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(telefonoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(39, 39, 39))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(221, 221, 221))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(cedulaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(especialidadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(apellidoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(salarioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(direccionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefonoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cleanButton)
                    .addComponent(deleteButton)
                    .addComponent(updateButton)
                    .addComponent(insertButton))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getByIdButton)
                    .addComponent(getByNameButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cedulaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaTextFieldActionPerformed

    }//GEN-LAST:event_cedulaTextFieldActionPerformed

    private boolean validateData() {

        if (!SwingUtilities.includesValidChar(1, this.cedulaTextField.getText())) {
            SwingUtilities.showJOptionPane("Digite cedula del doctor");
            this.cedulaTextField.setBorder(SwingUtilities.colorBorder(1));
            return false;
        }
        if (!SwingUtilities.includesValidChar(2, this.nombreTextField.getText())) {
            SwingUtilities.showJOptionPane("Digite nombre del doctor");
            this.nombreTextField.setBorder(SwingUtilities.colorBorder(1));
            return false;
        }
        if (!SwingUtilities.includesValidChar(2, this.apellidoTextField.getText())) {
            SwingUtilities.showJOptionPane("Digite apellido del doctor");
            this.apellidoTextField.setBorder(SwingUtilities.colorBorder(1));
            return false;
        }
        if (!SwingUtilities.includesValidChar(2, this.especialidadTextField.getText())) {
            SwingUtilities.showJOptionPane("Digite especialidad del doctor");
            this.especialidadTextField.setBorder(SwingUtilities.colorBorder(1));
            return false;
        }
        if (!SwingUtilities.includesValidChar(3, this.salarioTextField.getText())) {
            if (Integer.parseInt(this.salarioTextField.getText()) > 999999) {
                SwingUtilities.showJOptionPane("Salario no puede exceder los 999.999");
            }
            SwingUtilities.showJOptionPane("Digite salario del doctor");
            this.salarioTextField.setBorder(SwingUtilities.colorBorder(1));
            return false;
        }
        if (!SwingUtilities.includesValidChar(2, this.direccionTextField.getText())) {
            SwingUtilities.showJOptionPane("Digite direccion del doctor");
            this.direccionTextField.setBorder(SwingUtilities.colorBorder(1));
            return false;
        }
        if (!SwingUtilities.includesValidChar(1, this.telefonoTextField.getText())) {
            SwingUtilities.showJOptionPane("Digite telefono del doctor");
            this.telefonoTextField.setBorder(SwingUtilities.colorBorder(1));
            return false;
        }

        return true;
    }
    private void nombreTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreTextFieldActionPerformed

    private void cleanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanButtonActionPerformed
        cleanTextFields();
    }//GEN-LAST:event_cleanButtonActionPerformed


    private void tableDoctorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDoctorMouseClicked

        if (evt.getClickCount() == 2) {
            int row = tableDoctor.getSelectedRow();
            cedulaTextField.setText(getTableDoctor().getValueAt(row, 0).toString());
            nombreTextField.setText(getTableDoctor().getValueAt(row, 1).toString());
            apellidoTextField.setText(getTableDoctor().getValueAt(row, 2).toString());
            especialidadTextField.setText(getTableDoctor().getValueAt(row, 3).toString());
            salarioTextField.setText((getTableDoctor().getValueAt(row, 4).toString()));
            direccionTextField.setText((getTableDoctor().getValueAt(row, 5).toString()));
            telefonoTextField.setText((getTableDoctor().getValueAt(row, 6).toString()));
            this.cedulaTextField.setEnabled(false);
        }
    }//GEN-LAST:event_tableDoctorMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        if (validateData()) {

            Doctor d = new Doctor(
                    Integer.parseInt(this.cedulaTextField.getText()),
                    this.nombreTextField.getText(),
                    this.apellidoTextField.getText(),
                    this.especialidadTextField.getText(),
                    Double.parseDouble(this.salarioTextField.getText()),
                    this.direccionTextField.getText(),
                    Integer.parseInt(this.telefonoTextField.getText()));

            int res = getBo().update(d);

            SwingUtilities.updateSwitch(res);

        }
        cleanTextFields();

    }//GEN-LAST:event_updateButtonActionPerformed


    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (cedulaTextField.getText().isEmpty()) {
            SwingUtilities.showJOptionPane("Seleccionar doctor a eliminar");
        } else {
            try {
                int cedula = Integer.parseInt(cedulaTextField.getText());
                Doctor d = new Doctor();
                d.setCedula(cedula);
                int res = getBo().delete(d);
                SwingUtilities.deleteSwitch(res);
                cleanTextFields();

            } catch (NumberFormatException nfe) {
                SwingUtilities.showJOptionPane("Ingresar cédula a eliminar (SOLO NUMEROS)");
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed


    private void getByIdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getByIdButtonActionPerformed

        if (SwingUtilities.includesValidChar(1, this.cedulaTextField.getText())) {
            int cedula = Integer.parseInt(this.cedulaTextField.getText());
            Doctor d = getBo().getById(cedula);
            List<Doctor> list = new ArrayList<>();
            list.add(d);

            if (list.get(0).getDireccion() == null) {
                SwingUtilities.showJOptionPane("No hay registros");
                cleanTextFields();
            } else {
                fillTable(list);
            }

        }

    }//GEN-LAST:event_getByIdButtonActionPerformed

    private void getByNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getByNameButtonActionPerformed
        if (SwingUtilities.includesValidChar(2, this.nombreTextField.getText())) {
            List<Doctor> list = getBo().getByName(this.nombreTextField.getText());
            if (list.isEmpty()) {
                SwingUtilities.showJOptionPane("No hay registros");
                cleanTextFields();
            } else {
                fillTable(list);
            }
        }


    }//GEN-LAST:event_getByNameButtonActionPerformed

    private void salarioTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salarioTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salarioTextFieldActionPerformed

    private void direccionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_direccionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_direccionTextFieldActionPerformed

    private void cedulaTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cedulaTextFieldMouseClicked
        this.cedulaTextField.setBorder(SwingUtilities.colorBorder(2));
    }//GEN-LAST:event_cedulaTextFieldMouseClicked

    private void nombreTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nombreTextFieldMouseClicked
        this.nombreTextField.setBorder(SwingUtilities.colorBorder(2));
    }//GEN-LAST:event_nombreTextFieldMouseClicked

    private void salarioTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salarioTextFieldMouseClicked
        this.salarioTextField.setBorder(SwingUtilities.colorBorder(2));
    }//GEN-LAST:event_salarioTextFieldMouseClicked

    private void apellidoTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apellidoTextFieldMouseClicked
        this.apellidoTextField.setBorder(SwingUtilities.colorBorder(2));
    }//GEN-LAST:event_apellidoTextFieldMouseClicked

    private void direccionTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_direccionTextFieldMouseClicked
        this.direccionTextField.setBorder(SwingUtilities.colorBorder(2));
    }//GEN-LAST:event_direccionTextFieldMouseClicked

    private void telefonoTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telefonoTextFieldMouseClicked
        this.telefonoTextField.setBorder(SwingUtilities.colorBorder(2));
    }//GEN-LAST:event_telefonoTextFieldMouseClicked

    private void especialidadTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_especialidadTextFieldMouseClicked
        this.especialidadTextField.setBorder(SwingUtilities.colorBorder(2));
    }//GEN-LAST:event_especialidadTextFieldMouseClicked

    private void insertButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertButtonMouseClicked
        if (validateData()) {

            Doctor d = new Doctor(
                    Integer.parseInt(this.cedulaTextField.getText()),
                    this.nombreTextField.getText(),
                    this.apellidoTextField.getText(),
                    this.especialidadTextField.getText(),
                    Double.parseDouble(this.salarioTextField.getText()),
                    this.direccionTextField.getText(),
                    Integer.parseInt(this.telefonoTextField.getText()));

            int res = getBo().insert(d);

            SwingUtilities.registerSwitch(res);
            cleanTextFields();

        }
    }//GEN-LAST:event_insertButtonMouseClicked

    private void especialidadTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_especialidadTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_especialidadTextFieldActionPerformed

    private void cleanTextFields() {

        this.cedulaTextField.setEnabled(true);

        this.telefonoTextField.setText("");
        this.cedulaTextField.setText("");
        this.salarioTextField.setText("");
        this.direccionTextField.setText("");
        this.nombreTextField.setText("");
        this.apellidoTextField.setText("");
        this.especialidadTextField.setText("");

        fillTable();
    }

    public JTable getTableDoctor() {
        return tableDoctor;
    }

    public void setTableDoctor(JTable tableDoctor) {
        this.tableDoctor = tableDoctor;
    }

    public DefaultTableModel getModelDoctor() {
        return modelDoctor;
    }

    public void setModelDoctor(DefaultTableModel modelDoctor) {
        this.modelDoctor = modelDoctor;
    }

    public DoctorBo getBo() {
        return bo;
    }

    public void setBo(DoctorBo bo) {
        this.bo = bo;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MantDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MantDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MantDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MantDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MantDoctor().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidoTextField;
    private javax.swing.JTextField cedulaTextField;
    private javax.swing.JButton cleanButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField direccionTextField;
    private javax.swing.JTextField especialidadTextField;
    private javax.swing.JButton getByIdButton;
    private javax.swing.JButton getByNameButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nombreTextField;
    private javax.swing.JTextField salarioTextField;
    private javax.swing.JTable tableDoctor;
    private javax.swing.JTextField telefonoTextField;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

}
